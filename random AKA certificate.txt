   // transform the random values to not be easily predictable
    XeCryptSha(var_140, 0xA0, var_A0, 0x60, 0, 0, var_160, 0x14);
    XeCryptRc4(var_160, var_140, 0xA0);
    
    PQWORD pqwRandomData = (PQWORD)var_140;
    PSECENG_KEYS pWritePathKeys = &pSecEng.WritePathKeys; // r29
    PSECENG_KEYS pReadPathKeys = &pSecEng.ReadPathKeys; // r30
    
    PQWORD pqwWriteKeys = (PQWORD)pWritePathKeys;
    PQWORD pqwReadKeys = (PQWORD)pReadPathKeys;
    
    // set the whitening keys
    for(DWORD X /* r11 */ = 8; X > 0; X--) {
        // set random keys
        QWORD qwRandom = *pqwRandomData;
        *pqwWriteKeys = qwRandom;
        *pqwReadKeys = qwRandom;
        
        // increment values
        pqwWriteKeys++;
        pqwReadKeys++;
        pqwRandomData++;
    }
    
    // set the aes keys, this is WRONG there is something with r27
    for(DWORD X /* r28 */ = 4; X > 0; X--) {
        // set the read path keys, they are decryption keys so no need to schedule with the shits
        pqwReadKeys[0] = pqwRandomData[0];
        pqwReadKeys[1] = pqwRandomData[1];
        
        // generate sbox
        _create_aes_sbox_128bit((PBYTE)qwRandom, r26 + 0x140); // r4 isnt that important its just the rijandael initial schedule array shit
        
        // set write key
        pqwWriteKeys[0] = pqwRandomData[0];
        pqwWriteKeys[1] = pqwRandomData[1];
        
        // increment values
        // 2 qwords equal to 0x10
        qwRandom += 2;
        pqwWriteKeys += 2;
        pqwReadKeys += 2;
    }